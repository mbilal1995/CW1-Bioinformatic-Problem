Bioinformatic_Problem: Sequence_Alignment_In_Python


Types of Pairwise Alignment
	1. 
Global Alignment: finds the best alignment over the entire lengths of the 2 sequences  (Needleman-Wunsch-Algorithm).
	2. 
Local Alignment: finds the most similar sequences among the 2 sequences (Smith-Waterman-Algorithm).

Method
	1. 
We will use the ‘bio-python’ tool


In the ‘cmd’ create a directory ‘Python27’
C:\python27>python -m pip install –upgrade pip
Go onto IDLE Python >>>import Bio
	1. 
Next to generate pairwise alignment, first create a Pairwise Aligner object:


>>>from Bio import Align
>>>aligner = Align.PairwiseAligner() #This stores the alignment parameters to be used for the pairwise alignments.
	1. 
We can use the aligner.score which calculates the alignment score between two sequences:


>>>>seq1 = “GAACT” #I still need to find a way to import my multi-fasta files without headers.
>>>>seq2 = “GAT”
>>>score = aligner.score(seq1, seq2)
>>>>score
3.0


OR  to see the actual alignment use the aligner.align method
>>> alignment = aligner.align(seq1, seq1)
>>>for alignment in alignment:
            print (alignment)
To see all alignment parameters used for the pairwise alignment use >>>print(aligner)
To verify the selected algorithm, use >>>aligner.algorith     
‘Needleman-Wunsch’ (global)


By default, global alignment is performed, which finds the optimal alignment over the whole length of seq1 and seq2.
Local alignment can be generated by setting aligner.mode to “local”.
Depending on the gap scoring parameters and mode a PairwiseAligner object automatically chooses the appropriate algorithm to use for the sequence alignment.
